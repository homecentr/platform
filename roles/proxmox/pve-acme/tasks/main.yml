# Inspired by https://github.com/simoncaron/ansible-role-pve_acme/blob/master/tasks/pve-acme.yml
- name: Install required python modules
  ansible.builtin.apt:
    name: 
      - python3-pexpect

- name: Check if default ACME account is registered
  ansible.builtin.command:
    cmd: pvenode acme plugin list
  register: acme_plugin_list
  changed_when: false
  ignore_errors: true

- name: Create config file
  ansible.builtin.copy:
    content: |
      CF_Token={{ pve_acme_cloudflare_token }}
      CF_Account_ID={{ pve_acme_cloudflare_account_id }}
    dest: "/tmp/acme.data"
    mode: "0600"
  when: pve_acme_plugin_name | string not in acme_plugin_list.stdout
  no_log: true

- name: Add ACME plugin configuration
  run_once: true
  ansible.builtin.command:
    cmd: "pvenode acme plugin add dns {{ pve_acme_plugin_name }} --api {{ pve_acme_plugin_api }} --data /tmp/acme.data"
  when: pve_acme_plugin_name | string not in acme_plugin_list.stdout
  changed_when: true

- name: Check if default ACME account is registered
  ansible.builtin.command:
    cmd: pvenode acme account list
  register: acme_account_list
  changed_when: false
  ignore_errors: true

- name: Add ACME account configuration
  run_once: true
  ansible.builtin.expect:
    # yamllint disable rule:line-length
    command: "pvenode acme account register {{ pve_acme_account_name }} {{ pve_acme_account_email }} --directory {{ 'https://acme-staging-v02.api.letsencrypt.org/directory' if (pve_acme_use_staging | default(true)) else 'https://acme-v02.api.letsencrypt.org/directory' }}"
    # yamllint enable rule:line-length
    responses:
      Do you agree to the above terms.*: y
  when: acme_account_list.stdout | length == 0
  notify: Order ACME certificates

- name: Check active ACME account
  register: acme_account_active
  changed_when: false
  ansible.builtin.command:
    cmd: "pvenode config get --property acme"

- name: Set ACME account
  ansible.builtin.command:
    cmd: "pvenode config set --acme \"account={{ pve_acme_account_name }}\""
  when: pve_acme_account_name | string not in acme_account_active.stdout
  changed_when: true

- name: Configure ACME domains
  ansible.builtin.include_tasks:
    file: acme-domain.yml
  vars:
    index: "{{ item_index }}"
    domain: "{{ item }}"
  loop:
    - "{{ pve_acme_proxmox_hostname }}.{{ pve_acme_root_domain }}"
    - "{{ ansible_hostname }}.{{ pve_acme_root_domain }}"
  loop_control:
    index_var: item_index
