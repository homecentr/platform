- name: Install Network UPS Tools
  ansible.builtin.package:
    name: nut
    state: present

- name: Check if node is hosting a ups device
  ansible.builtin.set_fact:
    hosted_ups_devices: "{{ ups_devices | selectattr('monitored_by', 'equalto', inventory_hostname) | map(attribute='name') }}"

- name: Setup master server
  ansible.builtin.include_tasks:
    file: master.yml
  when: (hosted_ups_devices | length) > 0

- name: Set facts
  ansible.builtin.set_fact:
    ups_server: "{{ (ups_devices | selectattr('name', 'equalto', ups_name) | map(attribute='monitored_by'))[0] }}"

- name: Configure UPS Monitor mode
  notify: Restart ups_monitor
  ansible.builtin.copy:
    dest: /etc/nut/nut.conf
    force: true
    mode: 0640
    owner: root
    group: nut
    content: |
      MODE={{ 'netserver' if (hosted_ups_devices | length) > 0 else 'netclient' }}

- name: Configure Network UPS Tools Monitor
  notify: Restart ups_monitor
  ansible.builtin.copy:
    dest: /etc/nut/upsmon.conf
    force: true
    mode: 0640
    owner: root
    group: nut
    content: "{{ lookup('template', 'upsmon.conf.j2') }}"

- name: Start the ups monitor
  ansible.builtin.service:
    name: nut-monitor
    state: started

- name: Dump the ups name to /etc/ups
  ansible.builtin.copy:
    dest: /etc/ups
    content: "{{ ups_name }}@{{ ups_server }}"
    owner: root
    group: root
    mode: 0644
