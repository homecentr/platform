apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ argocd_application_set.name }}
  namespace: {{ argocd_namespace }}
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  - git:
      repoURL: {{ argocd_git_repository_url }}
      revision: {{ argocd_git_ref }}
      files:
      - path: {{ argocd_application_set.name }}/**/.argocd*.y*ml
      values:
        environment: {{ argocd_environment }}
  template:
    metadata:
      name: '{% raw %}{{ .name }}{% endraw %}'
    spec:
      project: {{ argocd_application_set.project_name }}
      destination:
        server: https://kubernetes.default.svc
        namespace: '{% raw %}{{ index .path.segments 1 }}{% endraw %}'
      source:
        repoURL: {{ argocd_git_repository_url }}
        targetRevision: {{ argocd_git_ref }}
  templatePatch: | {% raw %}
    {{- $environment  := .values.environment -}}
    spec:
      source:
        path: '{{ .path.path }}'
        {{- if eq .type "helm" }}
        helm:
          releaseName: {{ .name }}
          skipCrds: {{ . | dig "skipCrds" true }}
          valueFiles:
          {{- range $valueFile := (. | dig "valueFiles" list) }}
            - {{ $valueFile | replace "$env" $environment }}
          {{- end }}
          {{- range $secretValueFile := (. | dig "secretValueFiles" list) }}
            - secrets://{{ $secretValueFile | replace "$env" $environment }}
          {{- end }}
        {{- else }}
        directory:
          exclude: '{.kubescape-exceptions.json,argocd*.json}'
        {{ end }}
      ignoreDifferences: {{ ( . | dig "ignoreDifferences" list) | toYaml | nindent 4 }}
      syncPolicy:
        automated:
          selfHeal: {{ . | dig "selfHeal" true }}
          prune: true
        syncOptions:
          - CreateNamespace=true
          {{ if eq ( . | dig "serverSideApply" false) true }}
          - ServerSideApply=true
          {{ end }}
    {% endraw %}